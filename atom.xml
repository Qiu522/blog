<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小黑的个人博客</title>
  
  <subtitle>昔风不起，唯有努力生存</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://www.yfvip.top/blog/"/>
  <updated>2018-10-07T12:59:54.402Z</updated>
  <id>https://www.yfvip.top/blog/</id>
  
  <author>
    <name>小黑</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>武功山之行</title>
    <link href="https://www.yfvip.top/blog/2018/10/07/%E6%AD%A6%E5%8A%9F%E5%B1%B1%E4%B9%8B%E8%A1%8C/"/>
    <id>https://www.yfvip.top/blog/2018/10/07/武功山之行/</id>
    <published>2018-10-07T12:59:22.000Z</published>
    <updated>2018-10-07T12:59:54.402Z</updated>
    
    <content type="html"><![CDATA[<p>11111</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;11111&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="随笔" scheme="https://www.yfvip.top/blog/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>css3-transform详解（一）</title>
    <link href="https://www.yfvip.top/blog/2018/10/07/css3-transform%E8%AF%A6%E8%A7%A3%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://www.yfvip.top/blog/2018/10/07/css3-transform详解（一）/</id>
    <published>2018-10-07T11:03:32.000Z</published>
    <updated>2018-10-07T13:25:38.702Z</updated>
    
    <content type="html"><![CDATA[<h1 id="transform（转换）"><a href="#transform（转换）" class="headerlink" title="transform（转换）"></a>transform（转换）</h1><p>  <strong>定义以及基本用法</strong><br>  定义：transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。<br>  基本语法：transform: none|transform-functions<br><a id="more"></a></p><p>  为什么我们今天要讲css属性呢，因为他实在是太好用了，我们知道js要实现一些动画往往需要大量的代码，但通过使用transform配合transition就可以轻松做出动画效果，通过使用transform可以很方便的使div进行旋转缩放，不需要通过去修改元素大量的css属性。那么我们首先来看看transform可以实现哪些动画。</p><p>  其次要注意的一点就是在写移动端页面的时候我们最好加上webkit前缀，与之相关的属性也最好一起加上，具体可以查看相关文档。</p><p>  <strong>旋转</strong><br>  <blockquote><p>rotate：单位deg<br>  2D操作：retate(angle) || ratateX(angle) || ratateY(angle)<br>  3D操作：rotate3d(x, y, z, angle) || ratateZ(angle)</p></blockquote></p><p>  <strong>缩放</strong><br>  <blockquote><p>scale：<br>  2D操作：scale(x,y) || scaleX(x) || scaleY(y)<br>  3D操作：scale3d(x, y, z) || scaleZ(z)</p></blockquote></p><p>  <strong>移动</strong><br>  <blockquote><p>translate：<br>  2D操作：translate(x,y) || translateX(x) || translateY(y)<br>  3D操作：translate3d(x, y, z) || translateZ(z)</p></blockquote></p><p>  <strong>斜切</strong><br>  <blockquote><p>skew：单位deg<br>  2D操作：skew(x-angle,y-angle) || skewX(angle) || skewY(angle) </p></blockquote></p><p>  至于这些参数的基本用法这里就不多说了，这里要使用时要注意的两点一是这些变换默认都是按着元素中心点进行变换：二是如果你给元素同时加了多种变换， 它的执行顺序是先写的后执行，例如如果你写了transform: scale(2) translate(100px),那么元素会先执行移动再进行缩放，如果你将两者颠倒则会产生不同的效果。具体原因我们后面再说，有兴趣的同学也可以自己试试并思考一下为什么会不同。</p><h1 id="transform-origin：转换中心点"><a href="#transform-origin：转换中心点" class="headerlink" title="transform-origin：转换中心点"></a>transform-origin：转换中心点</h1><p>  上一节我们说过，默认情况下元素按照元素的中心点进行变换，如果你想按照你自己希望的点进行变化，你就可以设置元素的变换中心点，注意最好在写样式的时候同时写上带webkit内核的属性。</p><p>  <strong>具体用法</strong><br>  <blockquote><p>默认值<br>  transform-orgin: center center;<br>注意：<br>  如果只写一个参数，另外一个值默认为center，而不是两者相同<br>参数：<br>  关键字：center，left。。。<br>  距离单位：px，em。。。<br>  百分比</p></blockquote></p><h1 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h1><p>  如果我们想通过js让一个div运动起来，我们可能会去修改元素的position，可是我们通过transform让元素移动时并没有设置定位，那么我们是如何做到的呢？</p><p>  我们可以先给一个div设置translate(100px),然后我们试着通过js的getComputedStyle去获取并打印出transform,我们会神奇的发现打印出来的是:matrix(1, 0, 0, 1, 100, 0) 。这就是矩阵方程，transform就是通过改变这个方程来实现元素的变换的至于什么是矩阵，那就是数学问题了，这里我就不深入介绍了，有兴趣的同学可以自己去查阅资料，这里我只介绍如何通过矩阵实现变换。所以其实transform还可以接受一个参数就是矩阵方程，那么我们先来看看怎么通过矩阵实现这些变换。</p>  <blockquote><p>matrix(a,b,c,d,e,f)<br>初始值：matrix(1,0,0,1,0,0)</p><p>通过矩阵进行位移<br>  x轴位移 = e+x<br>  y轴位移 = f+y</p><p>通过矩阵进行缩放<br>  x轴：<br>    a = a<em>x；<br>    c = c</em>x；<br>    e = e<em>x；<br>  y轴：<br>    b = b</em>x；<br>    d = d<em>x；<br>    f = f</em>x；</p><p>通过矩阵函数进行斜切<br>  x斜切：（deg）<br>    c = Math.tan(deg/180<em>Math.PI)<br>  y斜切：（deg）<br>    b = Math.tan(deg/180</em>Math.PI)</p><p>通过矩阵函数进行旋转<br>  a = Math.cos(deg/180<em>Math.PI)<br>  b = Math.sin(deg/180</em>Math.PI)<br>  c = -Math.sin(deg/180<em>Math.PI)<br>  d = Math.cos(deg/180</em>Math.PI)</p><p>角度转弧度公式 = deg*Math.PI/180</p></blockquote><p>  到这里我们就能明白为什么transform:scale(.5) translate(100px)和transform:translate(100px) scale(.5)最后效果不同了，通过矩阵方程我们发现前者变换后的矩阵方程是：matrix(.5,0,0,.5,50,0)，而后者是：matrix(.5,0,0,.5,100,0)，自然最后得到的变换不尽相同了。</p><p>  最后要提一下得是这只是2d变换的矩阵方程，3d变换的矩阵还要复杂，但基本原理都是一样的，虽然我们可以直接通过封装好的属性来实现变换，但我们最好也能换记住相应的矩阵变换方程。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>  到这transform的基本用法我们就说完了，通过transform我们可以轻松实现一些效果，例如无缝滚动，照片墙摆放效果等，大家可以自己试着去使用transform做一些简单的动画效果。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;transform（转换）&quot;&gt;&lt;a href=&quot;#transform（转换）&quot; class=&quot;headerlink&quot; title=&quot;transform（转换）&quot;&gt;&lt;/a&gt;transform（转换）&lt;/h1&gt;&lt;p&gt;  &lt;strong&gt;定义以及基本用法&lt;/strong&gt;&lt;br&gt;  定义：transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&lt;br&gt;  基本语法：transform: none|transform-functions&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="https://www.yfvip.top/blog/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="css" scheme="https://www.yfvip.top/blog/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Hexo自定义页面做首页</title>
    <link href="https://www.yfvip.top/blog/2018/10/06/Hexo%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E5%81%9A%E9%A6%96%E9%A1%B5/"/>
    <id>https://www.yfvip.top/blog/2018/10/06/Hexo自定义页面做首页/</id>
    <published>2018-10-06T15:45:47.000Z</published>
    <updated>2018-10-07T11:07:50.636Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>  如果你想了解如何在 GitHub Pages上传自己写的网页作为首页，hexo博客作为其子页？即自己写的页面作为<a href="http://user.github.io的页面，将hexo博客放在http://user.github.io/blog上，怎么做？那就接着往下看.." target="_blank" rel="noopener">http://user.github.io的页面，将hexo博客放在http://user.github.io/blog上，怎么做？那就接着往下看..</a>.<br>  <a id="more"></a></p><p>  首先在看接下来的内容之前你至少已经会如何将hexo博客搭建在github page上了，如果还不会的童鞋可以查阅我之前写的文章：<a href="https://www.yfvip.top/blog/2018/10/05/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github-hexo%E6%90%AD%E5%BB%BA%E5%B1%9E%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/">如何使用github + hexo搭建属属于自己的博客</a>;</p><p>  关于如何使用个人网页做主页的教程网上也有不少，但大多是给你一大段git命令，像我这中纯粹因为好玩还没好好学习git命令的人来说实在是太艰难了，好在在不断的摸索中，终于总结出来了一套不怎么需要太多Git命令的方法来，但要完全操作下来至少你也要对node，git，hexo有所了解。</p><p>  之前我的想法是通过子域名访问，即主域名(yoursite.com)和子域名(blog.yoursite.com)都解析到你的GitHub Pagesyourname.github.io。然后再自定义主页，比如index.html。但通过查阅资料了解到了一个新的概念，叫做分支。</p><p>  那么你首先要明白什么是分支？我们知道github page给我们提供了免费的服务，但我们只能创建一个仓库来存放并展示我们的页面，但我们知道一个人不可能只有一个项目，那如果每次查看都要重新部署到主github page那也太麻烦了，所以github提供了分支功能，你只要把项目设置为master的分支就可以通过yourname.github.io/分支去访问，当然分支的作用远不及此，用兴趣的同学可以自己去查看相关资料，这里我就不再赘述了。</p><h1 id="新建一个repository"><a href="#新建一个repository" class="headerlink" title="新建一个repository"></a>新建一个repository</h1><pre><code>名字可以随意，我的是blog。那么你现在就有了一个空的repo了，注意这里创建的时候不需要CNAME文件的。创建完成之后你可以先放着不去管它。我们先把修改配置文件，将博客上传到这个仓库中。</code></pre><h1 id="修改Hexo配置问件-config-yml"><a href="#修改Hexo配置问件-config-yml" class="headerlink" title="修改Hexo配置问件_config.yml"></a>修改Hexo配置问件_config.yml</h1><p>  找到url下的root 修改成/你起的名字/ (博主这里就是/blog/)url也要改<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//# URL</span><br><span class="line">//## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: https://www.yfvip.top/blog</span><br><span class="line">root: /blog/</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure></p><p>  然后再找到_config.yml下的deploy，把repository改成你新的repository的clone地址<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: https://github.com/Qiu522/blog.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure></p><h1 id="重新部署你的博客"><a href="#重新部署你的博客" class="headerlink" title="重新部署你的博客"></a>重新部署你的博客</h1><p>  在对应文件下得git bash下输入 hexo g -d，打开你刚才新建的repo你会发现已经存在博客文件了，当然不用着急，现在这纯粹只是一个仓库还不能够直接访问。点击settings，一直往下翻找到github pages这儿点source选择master branch，然后点save保存<br>  <img src="/blog/2018/10/06/Hexo自定义页面做首页/settings.jpg" alt="github pages设置"></p><p>  之后你会发现他会显示Your site is published at <a href="http://www.yfvip.top/blog/，这说明你已经成功将repo创建成了master分支。">http://www.yfvip.top/blog/，这说明你已经成功将repo创建成了master分支。</a></p><h1 id="清空原来那个repo"><a href="#清空原来那个repo" class="headerlink" title="清空原来那个repo"></a>清空原来那个repo</h1><p>  到了这一步你就可以将原来的repo里的内容清空了，然后放进你自己想要的个人主页进去，如果想跳转到你的博客只需要通过链接跳转就好了。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;blog/&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>  到这你就完成了你博客的部署，你也可以根据需要安装配置你的主题，有兴趣的同学可以深入学习一下git命令操作，毕竟你要使用github进行版本控制或者团队协作都需要你对git有做了解，最后希望我的教程能对你有所帮助。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;  如果你想了解如何在 GitHub Pages上传自己写的网页作为首页，hexo博客作为其子页？即自己写的页面作为&lt;a href=&quot;http://user.github.io的页面，将hexo博客放在http://user.github.io/blog上，怎么做？那就接着往下看..&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://user.github.io的页面，将hexo博客放在http://user.github.io/blog上，怎么做？那就接着往下看..&lt;/a&gt;.&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://www.yfvip.top/blog/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>如何使用github + hexo搭建属属于自己的博客</title>
    <link href="https://www.yfvip.top/blog/2018/10/05/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8github-hexo%E6%90%AD%E5%BB%BA%E5%B1%9E%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>https://www.yfvip.top/blog/2018/10/05/如何使用github-hexo搭建属属于自己的博客/</id>
    <published>2018-10-05T14:37:32.000Z</published>
    <updated>2018-10-06T02:46:43.145Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h1><p>其实早在这之前我就一直想过写博客,但由于种种原因一直没有去学习这方面的知识,最近一直陆陆续续的在着手这方面的工作。从开始到搭建完成的过程中遇到了很多困难，因为在这之前对Github一点了解都没有导致满头雾水,不断的跳进一个又一个坑,甚至想过放弃.但最后结果想必都知道了。在写如何搭建之前我觉得我们应该先从头开始了解。<br><a id="more"></a></p><p><strong>那么我们为什么要建立自己的博客？</strong>    –<em>引自：<a href="https://zhuanlan.zhihu.com/p/19743861?columnSlug=cnfeat" target="_blank" rel="noopener">为什么你要写博客？</a></em><br>1.一个选择<br>  我曾经也问过自己这个问题，但是我觉得，博客时代过去跟我们要开博客是没有多大关系的，就好像你的读书时代已经过去你就不再读书一样。</p><p>  判断一件事情值不值得去做有一个方法：在一张白纸的左边写不值得做的原因，然后在右边写值得做的原因，写完一比较，一权衡，自然能够得出结果。</p><p>  所以，我在这里列出要写（独立）博客的原因，供大家去选择，然后填在你白纸的右边。</p><p>  注意，我不是给你一个建议，而是提供一个选择，这个选择蕴藏着我也不知道的可能。</p><p>2.提高将事情清楚的能力<br>  很多时候我们学习新知识都有一个阶段，从一无所知到你查阅资料到慢慢搞懂，但很多时候自己明白和告诉别人是不一样的，在写博客之前你需要花更多时间来表达出你的想法，表达你想法之前你得先对你要表达的东西充分理解并理清思路和逻辑。而这时你可能会发现很多东西你以为懂了，但当你在写下来的时候，你就觉得无从下手了。</p><p>3.记录成长<br>  我们每个人都应该有这样的经历:隔了很久我们回头看看以前的自己会发现特别傻x,但正是因为这些傻x的岁月让我们不断成长,你在成长的过程中不断的修正自己的错误。</p><p>4.探索未知的世界<br>  世界不止是你的家，你的公司，你的朋友圈，你应该去发现一个更大的世界，通过写博客，你会知道世界上还有很多人像你一样在写博客，这些人和知识正在世界的某个角落在等着你。</p><p>5.帮助更多想要获取帮助的人<br>  这点我相信大家由为感触,在你探索一个未知的知识领域的时候,往往被撞的一鼻子灰.幸运的人很快就能找到一个“师傅”或一篇很好的文章,但大多数往往在找“教程”的过程中就已经放弃了.因为他们没能够找到刚好理解的文章.</p><h1 id="一、学会搭建github-page"><a href="#一、学会搭建github-page" class="headerlink" title="一、学会搭建github page"></a>一、学会搭建github page</h1><p><strong>1.使用前了解github</strong><br>  GitHub是一个共享虚拟主机服务，用于存放使用Git版本控制的软件代码和内容项目(引自维基百科）</p><p><strong>2.为什么要使用github</strong><br>  github有一个很有爱的项目，叫做github pages，这个项目是给开发者建立一个私人页面，上面用来分享新颖的想法和自己写的代码.关键是这个项目是完全免费的，并且作为全世界最大的开源软件社区，你可以和全世界的IT计算机人员分享学习。</p><p><strong>创建仓库</strong><br>  至于如何注册登录github，这里我就不赘述了。<br>  在Github首页右上角头像左侧加号点选择 New repositor(新存储库)或点击这里进行创建一个仓库.<br>  <img src="/blog/2018/10/05/如何使用github-hexo搭建属属于自己的博客/newrepo.jpg" alt="2018-10-05-如何使用github-hexo搭建属属于自己的博客"></p><p>  之后你可以进入你的新建的仓库点setting进行设置，你会发现设置里面他已经提示你的页面已经提交到了 https：//你的github.github.io/,这时你可以在浏览器访问了，不过别急现在还没有网页。</p><h1 id="二、系统环境配置"><a href="#二、系统环境配置" class="headerlink" title="二、系统环境配置"></a>二、系统环境配置</h1><p>  要使用Hexo，需要在你的系统中支持Nodejs以及git，如果还没有，那就去官网下载安装吧，这儿比较简单，安装一路点next就行，这儿就不在赘述了。</p><p><strong>安装Node.js</strong><br>  <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">下载Nodejs</a><br>  参考地址：<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">安装Nodejs</a></p><p><strong>安装Git</strong><br>  <a href="https://git-scm.com/download/" target="_blank" rel="noopener">下载Git</a></p><p><strong>安装Hexo</strong><br>  注意：以下命令均需要在Git面板中输入，在你需要使用Hexo的文件夹下右键选择Git Bash Here</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd d:/hexo #你自己的地址</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install #安装项目依赖</span><br><span class="line">hexo g #或者hexo generate</span><br><span class="line">hexo s #或者hexo server，可以在http://localhost:4000/ 查看</span><br></pre></td></tr></table></figure><p>  这里提一下Hexo常用命令<br>    1.hexo generate（hexo g） 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹<br>    2.hexo server (hexo s) 启动本地web服务，用于博客的预览<br>    3.hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）</p><p>  如果想深入了解：<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo文档</a></p><p>  现在我们可以打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 已经可以看到一篇内置的blog了。</p><p>  <strong>Hexo主题设置</strong><br>  接下来我们就为自己的博客选一个主题吧<br>  <a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo主题</a><br>  <a href="https://www.jianshu.com/p/bcdbe7347c8d" target="_blank" rel="noopener">Hexo主题推荐</a></p><p>  这里我选用了yilia为例进行说明<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia #安装主题</span><br><span class="line">/*启用主题*/</span><br><span class="line">修改Hexo目录下的_config.yml配置文件中的theme属性，将其设置为yilia。</span><br><span class="line"></span><br><span class="line">/*更新主题*/</span><br><span class="line">cd themes/yilia</span><br><span class="line">git pull</span><br><span class="line">hexo g # 生成</span><br><span class="line">hexo s # 启动本地web服务器</span><br></pre></td></tr></table></figure></p><p>  现在我们可以打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 已经可以看到我们已经换了一个新的主题了。</p><h1 id="三、部署Hexo到Github-Pages"><a href="#三、部署Hexo到Github-Pages" class="headerlink" title="三、部署Hexo到Github Pages"></a>三、部署Hexo到Github Pages</h1><p>  这一步恐怕是最关键的一步了，让我们把在本地web环境下预览到的博客部署到github上，然后就可以直接通过<a href="http://Qiu522.github.io/访问了。不过很多教程文章对这个步骤语焉不详，这里着重说下。" target="_blank" rel="noopener">http://Qiu522.github.io/访问了。不过很多教程文章对这个步骤语焉不详，这里着重说下。</a></p><p>  首先需要明白所谓部署到github的原理。<br>    1.之前步骤中在Github上创建的那个特别的repo（Qiu522.github.io）一个最大的特点就是其master中的html静态文件，可以通过链接<a href="http://Qiu522.github.io来直接访问。" target="_blank" rel="noopener">http://Qiu522.github.io来直接访问。</a><br>    2.Hexo -g 会生成一个静态网站（第一次会生成一个public目录），这个静态文件可以直接访问。<br>    3.需要将hexo生成的静态网站，提交(git commit)到github上。<br>  明白了原理，怎么做自然就清晰了。</p><p><strong>检查SSh keys的设置</strong><br>  以下命令均是在Git bash里输入 </p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">/*此时会显示一些文件*/</span><br><span class="line">ssh-keygen -t rsa -C &quot;邮件地址@youremail.com&quot; #生成新的key文件,邮箱地址填你的Github地址</span><br><span class="line">Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt;</span><br><span class="line">/*接下来会让你输入密码（密码输入时不会显示不要以为自己没输入）*/</span><br><span class="line">/*之后就可以看到成功的界面。*/</span><br></pre></td></tr></table></figure><p><strong>添加SSH key到Github</strong><br>  进入githb首页，点头像选择Settings，找到SSH and GPG keys，点击new SSh Key<br>  <img src="/blog/2018/10/05/如何使用github-hexo搭建属属于自己的博客/ssh.jpg" alt="new SSH"></p><p>  到了这里就可以试试是否成功了。<br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">/*之后会要你输入yes/no,输入yes就好了。*/</span><br><span class="line">/*设置你的账号信息:*/</span><br><span class="line"></span><br><span class="line">git config --global user.name &quot;你的名字&quot;     #真实名字不是github用户名</span><br><span class="line">git config --global user.email &quot;邮箱@邮箱.com&quot;    #github邮箱</span><br></pre></td></tr></table></figure></p><p><strong>使用Hexo deploy部署</strong><br>  hexo deploy可以部署到很多平台，具体可以<a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">参考这个链接</a>. 如果部署到github，需要在配置文件_config.xml中作如下修改:<br>  <blockquote><p>deploy:<br>  type: git<br>  repo: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:Qiu522/Qiu522.github.io.git<br>  branch: master</p></blockquote><br>  然后在命令中执行 hexo d 即可完成部署<br>  注意需要提前安装一个扩展：$ npm install hexo-deployer-git –save</p><h1 id="四、最后的填坑"><a href="#四、最后的填坑" class="headerlink" title="四、最后的填坑"></a>四、最后的填坑</h1><p>  不知道怎么修改yilia主题?(修改themes/yilia/_config.yml)请参考<a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">一个简洁优雅的hexo主题</a><br>  Hexo主题配置(根目录_config.yml文件)<br>  电脑重装了系统/多台电脑写博客？那就赶紧戳这里<a href="https://www.zhihu.com/question/21193762" target="_blank" rel="noopener">使用hexo，如果换了电脑怎么更新博客？</a><br>  不知道如何编写Markdown语法？<a href="https://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="noopener">Markdown——入门指南</a><br>  想要给网站添加图片？请把图片放入根目录 source\ 下建立一个文件夹，当你执行hexo g的时候此文件夹自动生成到public中。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1.前言&quot;&gt;&lt;/a&gt;1.前言&lt;/h1&gt;&lt;p&gt;其实早在这之前我就一直想过写博客,但由于种种原因一直没有去学习这方面的知识,最近一直陆陆续续的在着手这方面的工作。从开始到搭建完成的过程中遇到了很多困难，因为在这之前对Github一点了解都没有导致满头雾水,不断的跳进一个又一个坑,甚至想过放弃.但最后结果想必都知道了。在写如何搭建之前我觉得我们应该先从头开始了解。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://www.yfvip.top/blog/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.yfvip.top/blog/2018/10/04/hello-world/"/>
    <id>https://www.yfvip.top/blog/2018/10/04/hello-world/</id>
    <published>2018-10-04T15:07:35.101Z</published>
    <updated>2018-10-05T13:39:38.858Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="java" scheme="https://www.yfvip.top/blog/tags/java/"/>
    
      <category term="hello" scheme="https://www.yfvip.top/blog/tags/hello/"/>
    
  </entry>
  
</feed>
